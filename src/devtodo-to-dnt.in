#! @SHELL@

#
# Copyright (C) 2008, 2009 Francesco Salvestrini
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#

PROGRAM_NAME="`echo $0 | @SED@ 's/^.*\/\([^\/][^\/]*\)$/\1/'`"

DNT_VERSION="@PACKAGE_VERSION@"
DT_VERSION="@DEVTODO_VERSION@"
DT_DB_VERSION=""
XSLT_FILE=""

function hint {
    echo "${PROGRAM_NAME}: ${1}"
    echo "Try \`${PROGRAM_NAME} -h' for more information."
}

function error {
    echo "${PROGRAM_NAME}: ${1}" > /dev/stderr
}

function version {
    echo "${PROGRAM_NAME} (@PACKAGE_NAME@) @PACKAGE_VERSION@"
}

function help {
    echo "Usage: ${PROGRAM_NAME} [OPTION]..."
    echo ""
    echo "Options:"
    echo "  -i, --input=FILE          specify input file (default ${INPUT})"
    echo "  -o, --output=FILE         specify output file (default ${OUTPUT})"
    echo "  -f, --force               force operation"
    echo "  -l, --libdir=DIRECTORY    specify library directory"
    echo "  -h, --help                print this help, then exit"
    echo "  -V, --version             print version number, then exit"
    echo ""
    echo "Report bugs to <@PACKAGE_BUGREPORT@>"
}

if test x"${1}" = x""; then
    hint "Missing parameter(s)"
    exit 1
fi

FORCE="no"
INPUT=".todo"
OUTPUT=".dnt.db"
LIBDIR="@pkgvdatadir@"

while test $# -gt 0 ; do
    case $1 in
        -i|--input)   shift ; INPUT=$1                         ;;
        --input*=*)   INPUT="`echo $1 | @SED@ 's,^[^=]*=,,'`"  ;;
        -o|--output)  shift ; OUTPUT=$1                        ;;
        --output*=*)  OUTPUT="`echo $1 | @SED@ 's,^[^=]*=,,'`" ;;
        -l|--libdir)  shift ; LIBDIR=$1                        ;;
        --libdir*=*)  LIBDIR="`echo $1 | @SED@ 's,^[^=]*=,,'`" ;;
        -f|--force)   FORCE="yes"          ;;
        -h|--help)    help        ; exit 0 ;;
        -V|--version) version     ; exit 0 ;;
        *)
            hint "Unknown option \`$1'"
            exit 1
            ;;
    esac
    shift
done

if test x"${INPUT}" = x"" ; then
    hint "Missing input file"
    exit 1
fi

if test x"${OUTPUT}" = x"" ; then
    hint "Missing output file"
    exit 1
fi

if test x"${LIBDIR}" = x"" ; then
    hint "Missing library directory"
    exit 1
fi

if test x"${FORCE}" != x"yes" ; then
    if test -f "${OUTPUT}" ; then
        hint "Output file already exists, use \`--force' to override"
        exit 1
    fi
fi

if test x"${DT_VERSION}" = x""; then
   error "Bug hit! Missing devtodo version"
   exit 1
fi
XSLT_FILE="${LIBDIR}/devtodo-${DT_VERSION}-to-dnt.xslt"

if test ! -r "${XSLT_FILE}"; then
    error "Cannot access \`${XSLT_FILE}' file"
    exit 1
fi

if test x"${DNT_VERSION}" = x""; then
   error "Bug hit! Missing dnt version"
   exit 1
fi

: >$OUTPUT || {
  error "Cannot write \`${OUTPUT}' file"
  exit 1
}

DT_DB_VERSION="`@SED@ -n '
  # Deleting lines untill todo tag is reach.
  s/^.*<[\ \t\n]*todo[\ \t\n]*//;
  t do;
  d;

  :do {
    s/version[\ \t\n]*\=[\ \t\n]*\"\(.*\)\".*/\1/;
    t done;

    # No version attribute is found, because we reach
    # the end of todo tag.
    />/ {
     b miss;
    }

    # Append following lines to build todo tag if it is
    # spanned over more lines.
    N;
    b do;
  };

  # Sanitize and print attribute value.
  :done {
    s/^[\ \t\n]*//;
    s/[\ \t\n]*$//;
    p;
    Q;
  }

  # Value attribute is missing, quit immediately.
  :miss {
    Q;
  }' <${INPUT}`"

if test x"${DT_DB_VERSION}" = x""; then
    error "Missing devtodo version from database"
    exit 1
fi

if test ! x"${DT_VERSION}" = x"${DT_DB_VERSION}"; then
    error "devtodo database and XSLT version mismatched"
    exit 1
fi

@XSLTPROC@ \
    --output $OUTPUT \
    $XSLT_FILE $INPUT >/dev/null 2>&1 || {
      error  "Cannot transform file \`${INPUT}' to file \`${OUTPUT}'"
      rm -f $OUTPUT 2>/dev/null
      exit 1
    }

exit 0
