#! @SHELL@

#
# Copyright (C) 2008, 2009 Francesco Salvestrini
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#

me="dnt-to-devtodo"

dnt_version="@PACKAGE_VERSION@"
devtodo_version="@DEVTODO_VERSION@"

function hint {
    echo "$1"
    echo "Try \`$me -h' for more information."
}

function error {
    echo "$me: $1" > /dev/stderr
}

function version {
    echo "$me (@PACKAGE_NAME@) @PACKAGE_VERSION@"
}

function help {
    echo "Usage: $me [OPTION]..."
    echo ""
    echo "Options:"
    echo "  -i, --input=FILE          specify input file (default $input)"
    echo "  -o, --output=FILE         specify output file (default $output)"
    echo "  -f, --force               force operation"
    echo "  -l, --libdir=DIRECTORY    specify library directory"
    echo "  -h, --help                print this help, then exit"
    echo "  -V, --version             print version number, then exit"
    echo ""
    echo "Report bugs to <@PACKAGE_BUGREPORT@>"
}

#if test $# -eq 0 ; then
#    hint "Missing parameter(s)"
#    exit 1
#fi

force="no"
input=".dnt.db"
output=".todo"
libdir="@pkgvdatadir@"

while test $# -gt 0 ; do
    case $1 in
        -i|--input)   shift ; input=$1                       ;;
        --input*=*)   input=`echo $1 | @SED@ 's,^[^=]*=,,'`  ;;
        -o|--output)  shift ; output=$1                      ;;
        --output*=*)  output=`echo $1 | @SED@ 's,^[^=]*=,,'` ;;
        -l|--libdir)  shift ; libdir=$1                      ;;
        --libdir*=*)  libdir=`echo $1 | @SED@ 's,^[^=]*=,,'` ;;
        -f|--force)   force="yes"          ;;
        -h|--help)    help        ; exit 0 ;;
        -V|--version) version     ; exit 0 ;;
        *)
            hint "Unknown option \`$1'"
            exit 1
            ;;
    esac
    shift
done

if test x"$input" = x"" ; then
    hint "Missing input file"
    exit 1
fi

if test x"$output" = x"" ; then
    hint "Missing output file"
    exit 1
fi

if test x"$libdir" = x"" ; then
    hint "Missing library directory"
    exit 1
fi

if test x"$force" != x"yes" ; then
    if test -f "$output" ; then
        hint "Output file already exists, use \`--force' to override"
        exit 1
    fi
fi


if test x"$devtodo_version" = x""; then
   error "Bug hit! Missing devtodo version"
   exit 1
fi
if test x"$dnt_version" = x""; then
   error "Bug hit! Missing dnt version"
   exit 1
fi


XSLT="${libdir}/${me}.xslt"
if test ! -f $XSLT ; then
    error "Cannot access \`$XSLT' file"
    exit 1
fi

rm -f $output
@XSLTPROC@ \
    --output $output \
    --stringparam dt_version $devtodo_version \
    $XSLT $input 2>&1 || {
    echo "$me: Cannot transform file \`${input}' to file \`${output}'"
    rm -f $output
    exit 1
}

exit 0
