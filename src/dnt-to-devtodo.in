#! @SHELL@

#
# Copyright (C) 2008, 2009 Francesco Salvestrini
#                          Alessandro Massignan
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#

PROGRAM_NAME="dnt-to-devtodo"

DNT_VERSION="@PACKAGE_VERSION@"
DT_VERSION="@DEVTODO_VERSION@"
XSLT_FILE=""

function hint {
    echo "${PROGRAM_NAME}: $1"
    echo "Try \`${PROGRAM_NAME} -h' for more information."
}

function error {
    echo "${PROGRAM_NAME}: $1" > /dev/stderr
}

function version {
    echo "${PROGRAM_NAME} (@PACKAGE_NAME@) @PACKAGE_VERSION@"
}

function help {
    echo "Usage: ${PROGRAM_NAME} [OPTION]..."
    echo ""
    echo "Options:"
    echo "  -i, --input=FILE          specify input file (default ${INPUT})"
    echo "  -o, --output=FILE         specify output file (default ${OUTPUT})"
    echo "  -D, --dt-version=VERSION  specify devtodo database version"
    echo "  -f, --force               force operation"
    echo "  -l, --libdir=DIRECTORY    specify library directory"
    echo "  -h, --help                print this help, then exit"
    echo "  -V, --version             print version number, then exit"
    echo ""
    echo "Report bugs to <@PACKAGE_BUGREPORT@>"
}

if test x"$1" = x""; then
    hint "Missing parameter(s)"
    exit 1
fi

FORCE="no"
INPUT=".todo"
OUTPUT=".dnt.db"
LIBDIR="@pkgvdatadir@"

while test $# -gt 0 ; do
    case $1 in
        -i|--input)      shift ; INPUT=$1                             ;;
        --input*=*)      INPUT="`echo $1 | @SED@ 's,^[^=]*=,,'`"      ;;
        -o|--output)     shift ; OUTPUT=$1                            ;;
        --output*=*)     OUTPUT="`echo $1 | @SED@ 's,^[^=]*=,,'`"     ;;
        -D|--dt-version) shift ; DT_VERSION=$1                        ;;
        --dt-version*=*) DT_VERSION="`echo $1 | @SED@ 's,^[^=]*=,,'`" ;;
        -l|--libdir)     shift ; LIBDIR=$1                            ;;
        --libdir*=*)     LIBDIR="`echo $1 | @SED@ 's,^[^=]*=,,'`"     ;;
        -f|--force)      FORCE="yes"          ;;
        -h|--help)       help        ; exit 0 ;;
        -V|--version)    version     ; exit 0 ;;
        *)
            hint "Unknown option \`$1'"
            exit 1
            ;;
    esac
    shift
done

if test x"${INPUT}" = x"" ; then
    hint "Missing input file"
    exit 1
fi

if test x"${OUTPUT}" = x"" ; then
    hint "Missing output file"
    exit 1
fi

if test x"${LIBDIR}" = x"" ; then
    hint "Missing library directory"
    exit 1
fi

if test ! -d "${LIBDIR}" ; then
    hint "Library directory not present"
    exit 1
fi

if test x"${FORCE}" != x"yes" ; then
    if test -f "${OUTPUT}" ; then
        hint "Output file already exists, use \`--force' to override"
        exit 1
    fi
fi

if test x"${DT_VERSION}" = x""; then
    error "Bug hit! Missing devtodo version"
    exit 1
fi
XSLT_FILE="${LIBDIR}/dnt-to-devtodo-${DT_VERSION}.xslt"

if test ! -r "${XSLT_FILE}"; then
    error "Cannot access \`${XSLT_FILE}' file"
    exit 1
fi

if test x"${DNT_VERSION}" = x""; then
    error "Bug hit! Missing dnt version"
    exit 1
fi

: >$OUTPUT || {
    error "Cannot write \`${OUTPUT}' file"
    exit 1
}

@XSLTPROC@ \
    --output $OUTPUT \
    --stringparam dt_version $DT_VERSION \
    $XSLT_FILE $INPUT >/dev/null 2>&1 || {
    error "Cannot transform file \`${INPUT}' to file \`${OUTPUT}'"
    rm -f $OUTPUT >/dev/null 2>&1
    exit 1
}

exit 0
